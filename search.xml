<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>4-程序流程结构</title>
      <link href="/2023/03/03/c-ji-chu-ru-men/4-cheng-xu-liu-cheng-jie-gou/"/>
      <url>/2023/03/03/c-ji-chu-ru-men/4-cheng-xu-liu-cheng-jie-gou/</url>
      
        <content type="html"><![CDATA[<p>C/C++支持最基本的三种程序运行结构：==顺序结构、选择结构、循环结构==</p><ul><li>顺序结构：程序按顺序执行，不发生跳转</li><li>选择结构：依据条件是否满足，有选择的执行相应功能</li><li>循环结构：依据条件是否满足，循环多次执行某段代码</li></ul><h3 id="4-1-选择结构"><a href="#4-1-选择结构" class="headerlink" title="4.1 选择结构"></a>4.1 选择结构</h3><h4 id="4-1-1-if语句"><a href="#4-1-1-if语句" class="headerlink" title="4.1.1 if语句"></a>4.1.1 if语句</h4><p><strong>作用：</strong>执行满足条件的语句</p><p>if语句的三种形式</p><ul><li><p>单行格式if语句</p></li><li><p>多行格式if语句</p></li><li><p>多条件的if语句</p></li></ul><ol><li><p>单行格式if语句：<code>if(条件){ 条件满足执行的语句 }</code></p><p><img src="/2023/03/03/c-ji-chu-ru-men/4-cheng-xu-liu-cheng-jie-gou/clip_image002.png" alt="img"></p><p>示例：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {//选择结构-单行if语句//输入一个分数，如果分数大于600分，视为考上一本大学，并在屏幕上打印int score = 0;cout &lt;&lt; "请输入一个分数：" &lt;&lt; endl;cin &gt;&gt; score;cout &lt;&lt; "您输入的分数为： " &lt;&lt; score &lt;&lt; endl;//if语句//注意事项，在if判断语句后面，不要加分号if (score &gt; 600){cout &lt;&lt; "我考上了一本大学！！！" &lt;&lt; endl;}system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><blockquote><p>注意：if条件表达式后不要加分号</p></blockquote><ol start="2"><li>多行格式if语句：<code>if(条件){ 条件满足执行的语句 }else{ 条件不满足执行的语句 };</code></li></ol><p><img src="/2023/03/03/c-ji-chu-ru-men/4-cheng-xu-liu-cheng-jie-gou/clip_image002-1541662519170.png" alt="img"></p><p>示例：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {int score = 0;cout &lt;&lt; "请输入考试分数：" &lt;&lt; endl;cin &gt;&gt; score;if (score &gt; 600){cout &lt;&lt; "我考上了一本大学" &lt;&lt; endl;}else{cout &lt;&lt; "我未考上一本大学" &lt;&lt; endl;}system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>多条件的if语句：<code>if(条件1){ 条件1满足执行的语句 }else if(条件2){条件2满足执行的语句}... else{ 都不满足执行的语句}</code></li></ol><p><img src="/2023/03/03/c-ji-chu-ru-men/4-cheng-xu-liu-cheng-jie-gou/clip_image002-1541662566808.png" alt="img"></p><p>示例：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {int score = 0;cout &lt;&lt; "请输入考试分数：" &lt;&lt; endl;cin &gt;&gt; score;if (score &gt; 600){cout &lt;&lt; "我考上了一本大学" &lt;&lt; endl;}else if (score &gt; 500){cout &lt;&lt; "我考上了二本大学" &lt;&lt; endl;}else if (score &gt; 400){cout &lt;&lt; "我考上了三本大学" &lt;&lt; endl;}else{cout &lt;&lt; "我未考上本科" &lt;&lt; endl;}system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>嵌套if语句</strong>：在if语句中，可以嵌套使用if语句，达到更精确的条件判断</p><p>案例需求：</p><ul><li>提示用户输入一个高考考试分数，根据分数做如下判断</li><li>分数如果大于600分视为考上一本，大于500分考上二本，大于400考上三本，其余视为未考上本科；</li><li>在一本分数中，如果大于700分，考入北大，大于650分，考入清华，大于600考入人大。</li></ul><p><strong>示例：</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int main() {int score = 0;cout &lt;&lt; "请输入考试分数：" &lt;&lt; endl;cin &gt;&gt; score;if (score &gt; 600){cout &lt;&lt; "我考上了一本大学" &lt;&lt; endl;if (score &gt; 700){cout &lt;&lt; "我考上了北大" &lt;&lt; endl;}else if (score &gt; 650){cout &lt;&lt; "我考上了清华" &lt;&lt; endl;}else{cout &lt;&lt; "我考上了人大" &lt;&lt; endl;}}else if (score &gt; 500){cout &lt;&lt; "我考上了二本大学" &lt;&lt; endl;}else if (score &gt; 400){cout &lt;&lt; "我考上了三本大学" &lt;&lt; endl;}else{cout &lt;&lt; "我未考上本科" &lt;&lt; endl;}system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>练习案例：</strong> 三只小猪称体重</p><p>有三只小猪ABC，请分别输入三只小猪的体重，并且判断哪只小猪最重？<img src="/2023/03/03/c-ji-chu-ru-men/4-cheng-xu-liu-cheng-jie-gou/%E4%B8%89%E5%8F%AA%E5%B0%8F%E7%8C%AA.jpg" alt="三只小猪"></p><h4 id="4-1-2-三目运算符"><a href="#4-1-2-三目运算符" class="headerlink" title="4.1.2 三目运算符"></a>4.1.2 三目运算符</h4><p><strong>作用：</strong> 通过三目运算符实现简单的判断</p><p><strong>语法：</strong><code>表达式1 ? 表达式2 ：表达式3</code></p><p><strong>解释：</strong></p><p>如果表达式1的值为真，执行表达式2，并返回表达式2的结果；</p><p>如果表达式1的值为假，执行表达式3，并返回表达式3的结果。</p><p><strong>示例：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {int a = 10;int b = 20;int c = 0;c = a &gt; b ? a : b;cout &lt;&lt; "c = " &lt;&lt; c &lt;&lt; endl;//C++中三目运算符返回的是变量,可以继续赋值(a &gt; b ? a : b) = 100;cout &lt;&lt; "a = " &lt;&lt; a &lt;&lt; endl;cout &lt;&lt; "b = " &lt;&lt; b &lt;&lt; endl;cout &lt;&lt; "c = " &lt;&lt; c &lt;&lt; endl;system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>总结：和if语句比较，三目运算符优点是短小整洁，缺点是如果用嵌套，结构不清晰</p></blockquote><h4 id="4-1-3-switch语句"><a href="#4-1-3-switch语句" class="headerlink" title="4.1.3 switch语句"></a>4.1.3 switch语句</h4><p><strong>作用：</strong>执行多条件分支语句</p><p><strong>语法：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">switch(表达式){case 结果1：执行语句;break;case 结果2：执行语句;break;...default:执行语句;break;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>示例：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {//请给电影评分 //10 ~ 9   经典   // 8 ~ 7   非常好// 6 ~ 5   一般// 5分以下 烂片int score = 0;cout &lt;&lt; "请给电影打分" &lt;&lt; endl;cin &gt;&gt; score;switch (score){case 10:case 9:cout &lt;&lt; "经典" &lt;&lt; endl;break;case 8:cout &lt;&lt; "非常好" &lt;&lt; endl;break;case 7:case 6:cout &lt;&lt; "一般" &lt;&lt; endl;break;default:cout &lt;&lt; "烂片" &lt;&lt; endl;break;}system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意1：switch语句中表达式类型只能是整型或者字符型</p></blockquote><blockquote><p>注意2：case里如果没有break，那么程序会一直向下执行</p></blockquote><blockquote><p>总结：与if语句比，对于多条件判断时，switch的结构清晰，执行效率高，缺点是switch不可以判断区间</p></blockquote><h3 id="4-2-循环结构"><a href="#4-2-循环结构" class="headerlink" title="4.2 循环结构"></a>4.2 循环结构</h3><h4 id="4-2-1-while循环语句"><a href="#4-2-1-while循环语句" class="headerlink" title="4.2.1 while循环语句"></a>4.2.1 while循环语句</h4><p><strong>作用：</strong>满足循环条件，执行循环语句</p><p><strong>语法：</strong><code> while(循环条件){ 循环语句 }</code></p><p><strong>解释：</strong>==只要循环条件的结果为真，就执行循环语句==</p><p><img src="/2023/03/03/c-ji-chu-ru-men/4-cheng-xu-liu-cheng-jie-gou/clip_image002-1541668640382.png" alt="img"></p><p><strong>示例：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {int num = 0;while (num &lt; 10){cout &lt;&lt; "num = " &lt;&lt; num &lt;&lt; endl;num++;}system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：在执行循环语句时候，程序必须提供跳出循环的出口，否则出现死循环</p></blockquote><p><strong>while循环练习案例：</strong>==猜数字==</p><p><strong>案例描述：</strong>系统随机生成一个1到100之间的数字，玩家进行猜测，如果猜错，提示玩家数字过大或过小，如果猜对恭喜玩家胜利，并且退出游戏。</p><p><img src="/2023/03/03/c-ji-chu-ru-men/4-cheng-xu-liu-cheng-jie-gou/%E7%8C%9C%E6%95%B0%E5%AD%97.jpg" alt="猜数字"></p><h4 id="4-2-2-do…while循环语句"><a href="#4-2-2-do…while循环语句" class="headerlink" title="4.2.2 do…while循环语句"></a>4.2.2 do…while循环语句</h4><p><strong>作用：</strong> 满足循环条件，执行循环语句</p><p><strong>语法：</strong> <code>do{ 循环语句 } while(循环条件);</code></p><p><strong>注意：</strong>与while的区别在于==do…while会先执行一次循环语句==，再判断循环条件</p><p><img src="/2023/03/03/c-ji-chu-ru-men/4-cheng-xu-liu-cheng-jie-gou/clip_image002-1541671163478.png" alt="img"></p><p><strong>示例：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {int num = 0;do{cout &lt;&lt; num &lt;&lt; endl;num++;} while (num &lt; 10);system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>总结：与while循环区别在于，do…while先执行一次循环语句，再判断循环条件</p></blockquote><p><strong>练习案例：水仙花数</strong></p><p><strong>案例描述：</strong>水仙花数是指一个 3 位数，它的每个位上的数字的 3次幂之和等于它本身</p><p>例如：1^3 + 5^3+ 3^3 = 153</p><p>请利用do…while语句，求出所有3位数中的水仙花数</p><h4 id="4-2-3-for循环语句"><a href="#4-2-3-for循环语句" class="headerlink" title="4.2.3 for循环语句"></a>4.2.3 for循环语句</h4><p><strong>作用：</strong> 满足循环条件，执行循环语句</p><p><strong>语法：</strong><code> for(起始表达式;条件表达式;末尾循环体) { 循环语句; }</code></p><p><strong>示例：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {for (int i = 0; i &lt; 10; i++){cout &lt;&lt; i &lt;&lt; endl;}system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>详解：</strong></p><p><img src="/2023/03/03/c-ji-chu-ru-men/4-cheng-xu-liu-cheng-jie-gou/1541673704101.png" alt="1541673704101"></p><blockquote><p>注意：for循环中的表达式，要用分号进行分隔</p></blockquote><blockquote><p>总结：while , do…while, for都是开发中常用的循环语句，for循环结构比较清晰，比较常用</p></blockquote><p><strong>练习案例：敲桌子</strong></p><p>案例描述：从1开始数到数字100， 如果数字个位含有7，或者数字十位含有7，或者该数字是7的倍数，我们打印敲桌子，其余数字直接打印输出。</p><p><img src="/2023/03/03/c-ji-chu-ru-men/4-cheng-xu-liu-cheng-jie-gou/timg.gif" alt="timg"></p><h4 id="4-2-4-嵌套循环"><a href="#4-2-4-嵌套循环" class="headerlink" title="4.2.4 嵌套循环"></a>4.2.4 嵌套循环</h4><p><strong>作用：</strong> 在循环体中再嵌套一层循环，解决一些实际问题</p><p>例如我们想在屏幕中打印如下图片，就需要利用嵌套循环</p><p><img src="/2023/03/03/c-ji-chu-ru-men/4-cheng-xu-liu-cheng-jie-gou/1541676003486.png" alt="1541676003486"></p><p><strong>示例：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {//外层循环执行1次，内层循环执行1轮for (int i = 0; i &lt; 10; i++){for (int j = 0; j &lt; 10; j++){cout &lt;&lt; "*" &lt;&lt; " ";}cout &lt;&lt; endl;}system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>练习案例：</strong>乘法口诀表</p><p>案例描述：利用嵌套循环，实现九九乘法表</p><p><img src="/2023/03/03/c-ji-chu-ru-men/4-cheng-xu-liu-cheng-jie-gou/0006018857256120_b.jpg" alt="0006018857256120_b"></p><h3 id="4-3-跳转语句"><a href="#4-3-跳转语句" class="headerlink" title="4.3 跳转语句"></a>4.3 跳转语句</h3><h4 id="4-3-1-break语句"><a href="#4-3-1-break语句" class="headerlink" title="4.3.1 break语句"></a>4.3.1 break语句</h4><p><strong>作用:</strong> 用于跳出==选择结构==或者==循环结构==</p><p>break使用的时机：</p><ul><li>出现在switch条件语句中，作用是终止case并跳出switch</li><li>出现在循环语句中，作用是跳出当前的循环语句</li><li>出现在嵌套循环中，跳出最近的内层循环语句</li></ul><p><strong>示例1：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {//1、在switch 语句中使用breakcout &lt;&lt; "请选择您挑战副本的难度：" &lt;&lt; endl;cout &lt;&lt; "1、普通" &lt;&lt; endl;cout &lt;&lt; "2、中等" &lt;&lt; endl;cout &lt;&lt; "3、困难" &lt;&lt; endl;int num = 0;cin &gt;&gt; num;switch (num){case 1:cout &lt;&lt; "您选择的是普通难度" &lt;&lt; endl;break;case 2:cout &lt;&lt; "您选择的是中等难度" &lt;&lt; endl;break;case 3:cout &lt;&lt; "您选择的是困难难度" &lt;&lt; endl;break;}system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>示例2：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {//2、在循环语句中用breakfor (int i = 0; i &lt; 10; i++){if (i == 5){break; //跳出循环语句}cout &lt;&lt; i &lt;&lt; endl;}system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>示例3：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {//在嵌套循环语句中使用break，退出内层循环for (int i = 0; i &lt; 10; i++){for (int j = 0; j &lt; 10; j++){if (j == 5){break;}cout &lt;&lt; "*" &lt;&lt; " ";}cout &lt;&lt; endl;}system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-3-2-continue语句"><a href="#4-3-2-continue语句" class="headerlink" title="4.3.2 continue语句"></a>4.3.2 continue语句</h4><p><strong>作用：</strong>在==循环语句==中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环</p><p><strong>示例：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {for (int i = 0; i &lt; 100; i++){if (i % 2 == 0){continue;}cout &lt;&lt; i &lt;&lt; endl;}system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：continue并没有使整个循环终止，而break会跳出循环</p></blockquote><h4 id="4-3-3-goto语句"><a href="#4-3-3-goto语句" class="headerlink" title="4.3.3 goto语句"></a>4.3.3 goto语句</h4><p><strong>作用：</strong>可以无条件跳转语句</p><p><strong>语法：</strong> <code>goto 标记;</code></p><p><strong>解释：</strong>如果标记的名称存在，执行到goto语句时，会跳转到标记的位置</p><p><strong>示例：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {cout &lt;&lt; "1" &lt;&lt; endl;goto FLAG;cout &lt;&lt; "2" &lt;&lt; endl;cout &lt;&lt; "3" &lt;&lt; endl;cout &lt;&lt; "4" &lt;&lt; endl;FLAG:cout &lt;&lt; "5" &lt;&lt; endl;system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：在程序中不建议使用goto语句，以免造成程序流程混乱</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C++ 程序流程结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3-运算符</title>
      <link href="/2023/03/03/c-ji-chu-ru-men/3-yun-suan-fu/"/>
      <url>/2023/03/03/c-ji-chu-ru-men/3-yun-suan-fu/</url>
      
        <content type="html"><![CDATA[<p><strong>作用：</strong>用于执行代码的运算</p><p>本章我们主要讲解以下几类运算符：</p><table><thead><tr><th><strong>运算符类型</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>算术运算符</td><td>用于处理四则运算</td></tr><tr><td>赋值运算符</td><td>用于将表达式的值赋给变量</td></tr><tr><td>比较运算符</td><td>用于表达式的比较，并返回一个真值或假值</td></tr><tr><td>逻辑运算符</td><td>用于根据表达式的值返回真值或假值</td></tr></tbody></table><h3 id="3-1-算术运算符"><a href="#3-1-算术运算符" class="headerlink" title="3.1 算术运算符"></a>3.1 算术运算符</h3><p><strong>作用</strong>：用于处理四则运算 </p><p>算术运算符包括以下符号：</p><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>+</td><td>正号</td><td>+3</td><td>3</td></tr><tr><td>-</td><td>负号</td><td>-3</td><td>-3</td></tr><tr><td>+</td><td>加</td><td>10 + 5</td><td>15</td></tr><tr><td>-</td><td>减</td><td>10 - 5</td><td>5</td></tr><tr><td>*</td><td>乘</td><td>10 * 5</td><td>50</td></tr><tr><td>/</td><td>除</td><td>10 / 5</td><td>2</td></tr><tr><td>%</td><td>取模(取余)</td><td>10 % 3</td><td>1</td></tr><tr><td>++</td><td>前置递增</td><td>a=2; b=++a;</td><td>a=3; b=3;</td></tr><tr><td>++</td><td>后置递增</td><td>a=2; b=a++;</td><td>a=3; b=2;</td></tr><tr><td>–</td><td>前置递减</td><td>a=2; b=–a;</td><td>a=1; b=1;</td></tr><tr><td>–</td><td>后置递减</td><td>a=2; b=a–;</td><td>a=1; b=2;</td></tr></tbody></table><p><strong>示例1：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">//加减乘除int main() {int a1 = 10;int b1 = 3;cout &lt;&lt; a1 + b1 &lt;&lt; endl;cout &lt;&lt; a1 - b1 &lt;&lt; endl;cout &lt;&lt; a1 * b1 &lt;&lt; endl;cout &lt;&lt; a1 / b1 &lt;&lt; endl;  //两个整数相除结果依然是整数int a2 = 10;int b2 = 20;cout &lt;&lt; a2 / b2 &lt;&lt; endl; int a3 = 10;int b3 = 0;//cout &lt;&lt; a3 / b3 &lt;&lt; endl; //报错，除数不可以为0//两个小数可以相除double d1 = 0.5;double d2 = 0.25;cout &lt;&lt; d1 / d2 &lt;&lt; endl;system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>总结：在除法运算中，除数不能为0</p></blockquote><p><strong>示例2：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">//取模int main() {int a1 = 10;int b1 = 3;cout &lt;&lt; 10 % 3 &lt;&lt; endl;int a2 = 10;int b2 = 20;cout &lt;&lt; a2 % b2 &lt;&lt; endl;int a3 = 10;int b3 = 0;//cout &lt;&lt; a3 % b3 &lt;&lt; endl; //取模运算时，除数也不能为0//两个小数不可以取模double d1 = 3.14;double d2 = 1.1;//cout &lt;&lt; d1 % d2 &lt;&lt; endl;system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>总结：只有整型变量可以进行取模运算</p></blockquote><p><strong>示例3：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">//递增int main() {//后置递增int a = 10;a++; //等价于a = a + 1cout &lt;&lt; a &lt;&lt; endl; // 11//前置递增int b = 10;++b;cout &lt;&lt; b &lt;&lt; endl; // 11//区别//前置递增先对变量进行++，再计算表达式int a2 = 10;int b2 = ++a2 * 10;cout &lt;&lt; b2 &lt;&lt; endl;//后置递增先计算表达式，后对变量进行++int a3 = 10;int b3 = a3++ * 10;cout &lt;&lt; b3 &lt;&lt; endl;system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>总结：前置递增先对变量进行++，再计算表达式，后置递增相反</p></blockquote><h3 id="3-2-赋值运算符"><a href="#3-2-赋值运算符" class="headerlink" title="3.2 赋值运算符"></a>3.2 赋值运算符</h3><p><strong>作用：</strong>用于将表达式的值赋给变量</p><p>赋值运算符包括以下几个符号：</p><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>=</td><td>赋值</td><td>a=2; b=3;</td><td>a=2; b=3;</td></tr><tr><td>+=</td><td>加等于</td><td>a=0; a+=2;</td><td>a=2;</td></tr><tr><td>-=</td><td>减等于</td><td>a=5; a-=3;</td><td>a=2;</td></tr><tr><td>*=</td><td>乘等于</td><td>a=2; a*=2;</td><td>a=4;</td></tr><tr><td>/=</td><td>除等于</td><td>a=4; a/=2;</td><td>a=2;</td></tr><tr><td>%=</td><td>模等于</td><td>a=3; a%2;</td><td>a=1;</td></tr></tbody></table><p><strong>示例：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {//赋值运算符// =int a = 10;a = 100;cout &lt;&lt; "a = " &lt;&lt; a &lt;&lt; endl;// +=a = 10;a += 2; // a = a + 2;cout &lt;&lt; "a = " &lt;&lt; a &lt;&lt; endl;// -=a = 10;a -= 2; // a = a - 2cout &lt;&lt; "a = " &lt;&lt; a &lt;&lt; endl;// *=a = 10;a *= 2; // a = a * 2cout &lt;&lt; "a = " &lt;&lt; a &lt;&lt; endl;// /=a = 10;a /= 2;  // a = a / 2;cout &lt;&lt; "a = " &lt;&lt; a &lt;&lt; endl;// %=a = 10;a %= 2;  // a = a % 2;cout &lt;&lt; "a = " &lt;&lt; a &lt;&lt; endl;system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3-比较运算符"><a href="#3-3-比较运算符" class="headerlink" title="3.3 比较运算符"></a>3.3 比较运算符</h3><p><strong>作用：</strong>用于表达式的比较，并返回一个真值或假值</p><p>比较运算符有以下符号：</p><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>==</td><td>相等于</td><td>4 == 3</td><td>0</td></tr><tr><td>!=</td><td>不等于</td><td>4 != 3</td><td>1</td></tr><tr><td>&lt;</td><td>小于</td><td>4 &lt; 3</td><td>0</td></tr><tr><td>&gt;</td><td>大于</td><td>4 &gt; 3</td><td>1</td></tr><tr><td>&lt;=</td><td>小于等于</td><td>4 &lt;= 3</td><td>0</td></tr><tr><td>&gt;=</td><td>大于等于</td><td>4 &gt;= 1</td><td>1</td></tr></tbody></table><p>示例：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {int a = 10;int b = 20;cout &lt;&lt; (a == b) &lt;&lt; endl; // 0 cout &lt;&lt; (a != b) &lt;&lt; endl; // 1cout &lt;&lt; (a &gt; b) &lt;&lt; endl; // 0cout &lt;&lt; (a &lt; b) &lt;&lt; endl; // 1cout &lt;&lt; (a &gt;= b) &lt;&lt; endl; // 0cout &lt;&lt; (a &lt;= b) &lt;&lt; endl; // 1system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：C和C++ 语言的比较运算中， ==“真”用数字“1”来表示， “假”用数字“0”来表示。== </p></blockquote><h3 id="3-4-逻辑运算符"><a href="#3-4-逻辑运算符" class="headerlink" title="3.4 逻辑运算符"></a>3.4 逻辑运算符</h3><p><strong>作用：</strong>用于根据表达式的值返回真值或假值</p><p>逻辑运算符有以下符号：</p><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>!</td><td>非</td><td>!a</td><td>如果a为假，则!a为真；  如果a为真，则!a为假。</td></tr><tr><td>&amp;&amp;</td><td>与</td><td>a &amp;&amp; b</td><td>如果a和b都为真，则结果为真，否则为假。</td></tr><tr><td>||</td><td>或</td><td>a || b</td><td>如果a和b有一个为真，则结果为真，二者都为假时，结果为假。</td></tr></tbody></table><p><strong>示例1：</strong>逻辑非</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">//逻辑运算符  --- 非int main() {int a = 10;cout &lt;&lt; !a &lt;&lt; endl; // 0cout &lt;&lt; !!a &lt;&lt; endl; // 1system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>总结： 真变假，假变真</p></blockquote><p><strong>示例2：</strong>逻辑与</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">//逻辑运算符  --- 与int main() {int a = 10;int b = 10;cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;// 1a = 10;b = 0;cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;// 0 a = 0;b = 0;cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;// 0system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>总结：逻辑==与==运算符总结： ==同真为真，其余为假==</p></blockquote><p><strong>示例3：</strong>逻辑或</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">//逻辑运算符  --- 或int main() {int a = 10;int b = 10;cout &lt;&lt; (a || b) &lt;&lt; endl;// 1a = 10;b = 0;cout &lt;&lt; (a || b) &lt;&lt; endl;// 1 a = 0;b = 0;cout &lt;&lt; (a || b) &lt;&lt; endl;// 0system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>逻辑==或==运算符总结： ==同假为假，其余为真==</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C++ 运算符 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2-数据类型</title>
      <link href="/2023/03/03/c-ji-chu-ru-men/2-shu-ju-lei-xing/"/>
      <url>/2023/03/03/c-ji-chu-ru-men/2-shu-ju-lei-xing/</url>
      
        <content type="html"><![CDATA[<p>C++规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量分配内存</p><h3 id="2-1-整型"><a href="#2-1-整型" class="headerlink" title="2.1 整型"></a>2.1 整型</h3><p><strong>作用</strong>：整型变量表示的是==整数类型==的数据</p><p>C++中能够表示整型的类型有以下几种方式，<strong>区别在于所占内存空间不同</strong>：</p><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th><th>取值范围</th></tr></thead><tbody><tr><td>short(短整型)</td><td>2字节</td><td>(-2^15 ~ 2^15-1)</td></tr><tr><td>int(整型)</td><td>4字节</td><td>(-2^31 ~ 2^31-1)</td></tr><tr><td>long(长整形)</td><td>Windows为4字节，Linux为4字节(32位)，8字节(64位)</td><td>(-2^31 ~ 2^31-1)</td></tr><tr><td>long long(长长整形)</td><td>8字节</td><td>(-2^63 ~ 2^63-1)</td></tr></tbody></table><h3 id="2-2-sizeof关键字"><a href="#2-2-sizeof关键字" class="headerlink" title="2.2 sizeof关键字"></a>2.2 sizeof关键字</h3><p><strong>作用：</strong>利用sizeof关键字可以==统计数据类型所占内存大小==</p><p><strong>语法：</strong> <code>sizeof( 数据类型 / 变量)</code></p><p><strong>示例：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {cout &lt;&lt; "short 类型所占内存空间为： " &lt;&lt; sizeof(short) &lt;&lt; endl;cout &lt;&lt; "int 类型所占内存空间为： " &lt;&lt; sizeof(int) &lt;&lt; endl;cout &lt;&lt; "long 类型所占内存空间为： " &lt;&lt; sizeof(long) &lt;&lt; endl;cout &lt;&lt; "long long 类型所占内存空间为： " &lt;&lt; sizeof(long long) &lt;&lt; endl;system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>整型结论</strong>：==short &lt; int &lt;= long &lt;= long long==</p></blockquote><h3 id="2-3-实型（浮点型）"><a href="#2-3-实型（浮点型）" class="headerlink" title="2.3 实型（浮点型）"></a>2.3 实型（浮点型）</h3><p><strong>作用</strong>：用于==表示小数==</p><p>浮点型变量分为两种：</p><ol><li>单精度float </li><li>双精度double</li></ol><p>两者的<strong>区别</strong>在于表示的有效数字范围不同。</p><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th><th><strong>有效数字范围</strong></th></tr></thead><tbody><tr><td>float</td><td>4字节</td><td>7位有效数字</td></tr><tr><td>double</td><td>8字节</td><td>15～16位有效数字</td></tr></tbody></table><p><strong>示例：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {float f1 = 3.14f;double d1 = 3.14;cout &lt;&lt; f1 &lt;&lt; endl;cout &lt;&lt; d1&lt;&lt; endl;cout &lt;&lt; "float  sizeof = " &lt;&lt; sizeof(f1) &lt;&lt; endl;cout &lt;&lt; "double sizeof = " &lt;&lt; sizeof(d1) &lt;&lt; endl;//科学计数法float f2 = 3e2; // 3 * 10 ^ 2 cout &lt;&lt; "f2 = " &lt;&lt; f2 &lt;&lt; endl;float f3 = 3e-2;  // 3 * 0.1 ^ 2cout &lt;&lt; "f3 = " &lt;&lt; f3 &lt;&lt; endl;system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-字符型"><a href="#2-4-字符型" class="headerlink" title="2.4 字符型"></a>2.4 字符型</h3><p><strong>作用：</strong>字符型变量用于显示单个字符</p><p><strong>语法：</strong><code>char ch = 'a';</code></p><blockquote><p>注意1：在显示字符型变量时，用单引号将字符括起来，不要用双引号</p></blockquote><blockquote><p>注意2：单引号内只能有一个字符，不可以是字符串</p></blockquote><ul><li>C和C++中字符型变量只占用==1个字节==。</li><li>字符型变量并不是把字符本身放到内存中存储，而是将对应的ASCII编码放入到存储单元</li></ul><p>示例：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {char ch = 'a';cout &lt;&lt; ch &lt;&lt; endl;cout &lt;&lt; sizeof(char) &lt;&lt; endl;//ch = "abcde"; //错误，不可以用双引号//ch = 'abcde'; //错误，单引号内只能引用一个字符cout &lt;&lt; (int)ch &lt;&lt; endl;  //查看字符a对应的ASCII码ch = 97; //可以直接用ASCII给字符型变量赋值cout &lt;&lt; ch &lt;&lt; endl;system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ASCII码表格：</p><table><thead><tr><th><strong>ASCII</strong>值</th><th><strong>控制字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th></tr></thead><tbody><tr><td>0</td><td>NUT</td><td>32</td><td>(space)</td><td>64</td><td>@</td><td>96</td><td>、</td></tr><tr><td>1</td><td>SOH</td><td>33</td><td>!</td><td>65</td><td>A</td><td>97</td><td>a</td></tr><tr><td>2</td><td>STX</td><td>34</td><td>“</td><td>66</td><td>B</td><td>98</td><td>b</td></tr><tr><td>3</td><td>ETX</td><td>35</td><td>#</td><td>67</td><td>C</td><td>99</td><td>c</td></tr><tr><td>4</td><td>EOT</td><td>36</td><td>$</td><td>68</td><td>D</td><td>100</td><td>d</td></tr><tr><td>5</td><td>ENQ</td><td>37</td><td>%</td><td>69</td><td>E</td><td>101</td><td>e</td></tr><tr><td>6</td><td>ACK</td><td>38</td><td>&amp;</td><td>70</td><td>F</td><td>102</td><td>f</td></tr><tr><td>7</td><td>BEL</td><td>39</td><td>,</td><td>71</td><td>G</td><td>103</td><td>g</td></tr><tr><td>8</td><td>BS</td><td>40</td><td>(</td><td>72</td><td>H</td><td>104</td><td>h</td></tr><tr><td>9</td><td>HT</td><td>41</td><td>)</td><td>73</td><td>I</td><td>105</td><td>i</td></tr><tr><td>10</td><td>LF</td><td>42</td><td>*</td><td>74</td><td>J</td><td>106</td><td>j</td></tr><tr><td>11</td><td>VT</td><td>43</td><td>+</td><td>75</td><td>K</td><td>107</td><td>k</td></tr><tr><td>12</td><td>FF</td><td>44</td><td>,</td><td>76</td><td>L</td><td>108</td><td>l</td></tr><tr><td>13</td><td>CR</td><td>45</td><td>-</td><td>77</td><td>M</td><td>109</td><td>m</td></tr><tr><td>14</td><td>SO</td><td>46</td><td>.</td><td>78</td><td>N</td><td>110</td><td>n</td></tr><tr><td>15</td><td>SI</td><td>47</td><td>/</td><td>79</td><td>O</td><td>111</td><td>o</td></tr><tr><td>16</td><td>DLE</td><td>48</td><td>0</td><td>80</td><td>P</td><td>112</td><td>p</td></tr><tr><td>17</td><td>DCI</td><td>49</td><td>1</td><td>81</td><td>Q</td><td>113</td><td>q</td></tr><tr><td>18</td><td>DC2</td><td>50</td><td>2</td><td>82</td><td>R</td><td>114</td><td>r</td></tr><tr><td>19</td><td>DC3</td><td>51</td><td>3</td><td>83</td><td>S</td><td>115</td><td>s</td></tr><tr><td>20</td><td>DC4</td><td>52</td><td>4</td><td>84</td><td>T</td><td>116</td><td>t</td></tr><tr><td>21</td><td>NAK</td><td>53</td><td>5</td><td>85</td><td>U</td><td>117</td><td>u</td></tr><tr><td>22</td><td>SYN</td><td>54</td><td>6</td><td>86</td><td>V</td><td>118</td><td>v</td></tr><tr><td>23</td><td>TB</td><td>55</td><td>7</td><td>87</td><td>W</td><td>119</td><td>w</td></tr><tr><td>24</td><td>CAN</td><td>56</td><td>8</td><td>88</td><td>X</td><td>120</td><td>x</td></tr><tr><td>25</td><td>EM</td><td>57</td><td>9</td><td>89</td><td>Y</td><td>121</td><td>y</td></tr><tr><td>26</td><td>SUB</td><td>58</td><td>:</td><td>90</td><td>Z</td><td>122</td><td>z</td></tr><tr><td>27</td><td>ESC</td><td>59</td><td>;</td><td>91</td><td>[</td><td>123</td><td>{</td></tr><tr><td>28</td><td>FS</td><td>60</td><td>&lt;</td><td>92</td><td>/</td><td>124</td><td>|</td></tr><tr><td>29</td><td>GS</td><td>61</td><td>=</td><td>93</td><td>]</td><td>125</td><td>}</td></tr><tr><td>30</td><td>RS</td><td>62</td><td>&gt;</td><td>94</td><td>^</td><td>126</td><td>`</td></tr><tr><td>31</td><td>US</td><td>63</td><td>?</td><td>95</td><td>_</td><td>127</td><td>DEL</td></tr></tbody></table><p>ASCII 码大致由以下<strong>两部分组</strong>成：</p><ul><li>ASCII 非打印控制字符： ASCII 表上的数字 <strong>0-31</strong> 分配给了控制字符，用于控制像打印机等一些外围设备。</li><li>ASCII 打印字符：数字 <strong>32-126</strong> 分配给了能在键盘上找到的字符，当查看或打印文档时就会出现。</li></ul><h3 id="2-5-转义字符"><a href="#2-5-转义字符" class="headerlink" title="2.5 转义字符"></a>2.5 转义字符</h3><p><strong>作用：</strong>用于表示一些==不能显示出来的ASCII字符==</p><p>现阶段我们常用的转义字符有：<code> \n  \\  \t</code></p><table><thead><tr><th><strong>转义字符</strong></th><th><strong>含义</strong></th><th><strong>ASCII</strong>码值（十进制）</th></tr></thead><tbody><tr><td>\a</td><td>警报</td><td>007</td></tr><tr><td>\b</td><td>退格(BS) ，将当前位置移到前一列</td><td>008</td></tr><tr><td>\f</td><td>换页(FF)，将当前位置移到下页开头</td><td>012</td></tr><tr><td><strong>\n</strong></td><td><strong>换行(LF) ，将当前位置移到下一行开头</strong></td><td><strong>010</strong></td></tr><tr><td>\r</td><td>回车(CR) ，将当前位置移到本行开头</td><td>013</td></tr><tr><td><strong>\t</strong></td><td><strong>水平制表(HT)  （跳到下一个TAB位置）</strong></td><td><strong>009</strong></td></tr><tr><td>\v</td><td>垂直制表(VT)</td><td>011</td></tr><tr><td><strong>\\</strong></td><td><strong>代表一个反斜线字符”"</strong></td><td><strong>092</strong></td></tr><tr><td>'</td><td>代表一个单引号（撇号）字符</td><td>039</td></tr><tr><td>"</td><td>代表一个双引号字符</td><td>034</td></tr><tr><td>?</td><td>代表一个问号</td><td>063</td></tr><tr><td>\0</td><td>数字0</td><td>000</td></tr><tr><td>\ddd</td><td>8进制转义字符，d范围0~7</td><td>3位8进制</td></tr><tr><td>\xhh</td><td>16进制转义字符，h范围0<del>9，a</del>f，A~F</td><td>3位16进制</td></tr></tbody></table><p>示例：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {cout &lt;&lt; "\\" &lt;&lt; endl;cout &lt;&lt; "\tHello" &lt;&lt; endl;cout &lt;&lt; "\n" &lt;&lt; endl;system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6-字符串型"><a href="#2-6-字符串型" class="headerlink" title="2.6 字符串型"></a>2.6 字符串型</h3><p><strong>作用</strong>：用于表示一串字符</p><p><strong>两种风格</strong></p><ol><li><p><strong>C风格字符串</strong>： <code>char 变量名[] = "字符串值"</code></p><p>示例：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {char str1[] = "hello world";cout &lt;&lt; str1 &lt;&lt; endl;    system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><blockquote><p>注意：C风格的字符串要用双引号括起来</p></blockquote><ol><li><p><strong>C++风格字符串</strong>：  <code>string  变量名 = "字符串值"</code></p><p>示例：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {string str = "hello world";cout &lt;&lt; str &lt;&lt; endl;system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><blockquote><p>注意：C++风格字符串，需要加入头文件==#include&lt;string&gt;==</p></blockquote><h3 id="2-7-布尔类型-bool"><a href="#2-7-布尔类型-bool" class="headerlink" title="2.7 布尔类型 bool"></a>2.7 布尔类型 bool</h3><p><strong>作用：</strong>布尔数据类型代表真或假的值 </p><p>bool类型只有两个值：</p><ul><li>true  — 真（本质是1）</li><li>false — 假（本质是0）</li></ul><p><strong>bool类型占==1个字节==大小</strong></p><p>示例：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main() {bool flag = true;cout &lt;&lt; flag &lt;&lt; endl; // 1flag = false;cout &lt;&lt; flag &lt;&lt; endl; // 0cout &lt;&lt; "size of bool = " &lt;&lt; sizeof(bool) &lt;&lt; endl; //1system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-8-数据的输入"><a href="#2-8-数据的输入" class="headerlink" title="2.8 数据的输入"></a>2.8 数据的输入</h3><p><strong>作用：用于从键盘获取数据</strong></p><p><strong>关键字：</strong>cin</p><p><strong>语法：</strong> <code>cin &gt;&gt; 变量 </code></p><p>示例：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main(){//整型输入int a = 0;cout &lt;&lt; "请输入整型变量：" &lt;&lt; endl;cin &gt;&gt; a;cout &lt;&lt; a &lt;&lt; endl;//浮点型输入double d = 0;cout &lt;&lt; "请输入浮点型变量：" &lt;&lt; endl;cin &gt;&gt; d;cout &lt;&lt; d &lt;&lt; endl;//字符型输入char ch = 0;cout &lt;&lt; "请输入字符型变量：" &lt;&lt; endl;cin &gt;&gt; ch;cout &lt;&lt; ch &lt;&lt; endl;//字符串型输入string str;cout &lt;&lt; "请输入字符串型变量：" &lt;&lt; endl;cin &gt;&gt; str;cout &lt;&lt; str &lt;&lt; endl;//布尔类型输入bool flag = true;cout &lt;&lt; "请输入布尔型变量：" &lt;&lt; endl;cin &gt;&gt; flag;cout &lt;&lt; flag &lt;&lt; endl;system("pause");return EXIT_SUCCESS;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C++ 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1-C++初识</title>
      <link href="/2023/03/03/c-ji-chu-ru-men/1-c-chu-shi/"/>
      <url>/2023/03/03/c-ji-chu-ru-men/1-c-chu-shi/</url>
      
        <content type="html"><![CDATA[<h3 id="1-1-第一个C-程序"><a href="#1-1-第一个C-程序" class="headerlink" title="1.1 第一个C++程序"></a>1.1 第一个C++程序</h3><p>编写一个C++程序总共分为4个步骤</p><ul><li>创建项目</li><li>创建文件</li><li>编写代码</li><li>运行程序</li></ul><h4 id="1-1-1-创建项目"><a href="#1-1-1-创建项目" class="headerlink" title="1.1.1 创建项目"></a>1.1.1 创建项目</h4><p>​Visual Studio是我们用来编写C++程序的主要工具，我们先将它打开</p><p><img src="/2023/03/03/c-ji-chu-ru-men/1-c-chu-shi/1541383178746.png" alt="1541383178746"></p><p><img src="/2023/03/03/c-ji-chu-ru-men/1-c-chu-shi/1541384366413.png" alt="1541384366413"></p><h4 id="1-1-2-创建文件"><a href="#1-1-2-创建文件" class="headerlink" title="1.1.2 创建文件"></a>1.1.2 创建文件</h4><p>右键源文件，选择添加-&gt;新建项</p><p><img src="/2023/03/03/c-ji-chu-ru-men/1-c-chu-shi/1541383817248.png" alt="1541383817248"></p><p>给C++文件起个名称，然后点击添加即可。</p><p><img src="/2023/03/03/c-ji-chu-ru-men/1-c-chu-shi/1541384140042.png" alt="1541384140042"></p><h4 id="1-1-3-编写代码"><a href="#1-1-3-编写代码" class="headerlink" title="1.1.3 编写代码"></a>1.1.3 编写代码</h4><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;iostream&gt;using namespace std;int main() {cout &lt;&lt; "Hello world" &lt;&lt; endl;system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-1-4-运行程序"><a href="#1-1-4-运行程序" class="headerlink" title="1.1.4 运行程序"></a>1.1.4 运行程序</h4><p><img src="/2023/03/03/c-ji-chu-ru-men/1-c-chu-shi/1541384818688.png" alt="1541384818688"></p><h3 id="1-2-注释"><a href="#1-2-注释" class="headerlink" title="1.2 注释"></a>1.2 注释</h3><p><strong>作用</strong>：在代码中加一些说明和解释，方便自己或其他程序员程序员阅读代码</p><p><strong>两种格式</strong></p><ol><li><strong>单行注释</strong>：<code>// 描述信息</code> <ul><li>通常放在一行代码的上方，或者一条语句的末尾，==对该行代码说明==</li></ul></li><li><strong>多行注释</strong>： <code>/* 描述信息 */</code><ul><li>通常放在一段代码的上方，==对该段代码做整体说明==</li></ul></li></ol><blockquote><p>提示：编译器在编译代码时，会忽略注释的内容</p></blockquote><h3 id="1-3-变量"><a href="#1-3-变量" class="headerlink" title="1.3 变量"></a>1.3 变量</h3><p><strong>作用</strong>：给一段指定的内存空间起名，方便操作这段内存</p><p><strong>语法</strong>：<code>数据类型 变量名 = 初始值;</code></p><p><strong>示例：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">#include&lt;iostream&gt;using namespace std;int main() {//变量的定义//语法：数据类型  变量名 = 初始值int a = 10;cout &lt;&lt; "a = " &lt;&lt; a &lt;&lt; endl;system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：C++在创建变量时，必须给变量一个初始值，否则会报错</p></blockquote><h3 id="1-4-常量"><a href="#1-4-常量" class="headerlink" title="1.4  常量"></a>1.4  常量</h3><p><strong>作用</strong>：用于记录程序中不可更改的数据</p><p>C++定义常量两种方式</p><ol><li><p><strong>#define</strong> 宏常量： <code>#define 常量名 常量值</code></p><ul><li>==通常在文件上方定义==，表示一个常量</li></ul></li><li><p><strong>const</strong>修饰的变量 <code>const 数据类型 常量名 = 常量值</code></p><ul><li>==通常在变量定义前加关键字const==，修饰该变量为常量，不可修改</li></ul></li></ol><p><strong>示例：</strong></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">//1、宏常量#define day 7int main() {cout &lt;&lt; "一周里总共有 " &lt;&lt; day &lt;&lt; " 天" &lt;&lt; endl;//day = 8;  //报错，宏常量不可以修改//2、const修饰变量const int month = 12;cout &lt;&lt; "一年里总共有 " &lt;&lt; month &lt;&lt; " 个月份" &lt;&lt; endl;//month = 24; //报错，常量是不可以修改的system("pause");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-5-关键字"><a href="#1-5-关键字" class="headerlink" title="1.5 关键字"></a>1.5 关键字</h3><p><strong>作用：</strong>关键字是C++中预先保留的单词（标识符）</p><ul><li><strong>在定义变量或者常量时候，不要用关键字</strong></li></ul><p>C++关键字如下：</p><table><thead><tr><th>asm</th><th>do</th><th>if</th><th>return</th><th>typedef</th></tr></thead><tbody><tr><td>auto</td><td>double</td><td>inline</td><td>short</td><td>typeid</td></tr><tr><td>bool</td><td>dynamic_cast</td><td>int</td><td>signed</td><td>typename</td></tr><tr><td>break</td><td>else</td><td>long</td><td>sizeof</td><td>union</td></tr><tr><td>case</td><td>enum</td><td>mutable</td><td>static</td><td>unsigned</td></tr><tr><td>catch</td><td>explicit</td><td>namespace</td><td>static_cast</td><td>using</td></tr><tr><td>char</td><td>export</td><td>new</td><td>struct</td><td>virtual</td></tr><tr><td>class</td><td>extern</td><td>operator</td><td>switch</td><td>void</td></tr><tr><td>const</td><td>false</td><td>private</td><td>template</td><td>volatile</td></tr><tr><td>const_cast</td><td>float</td><td>protected</td><td>this</td><td>wchar_t</td></tr><tr><td>continue</td><td>for</td><td>public</td><td>throw</td><td>while</td></tr><tr><td>default</td><td>friend</td><td>register</td><td>true</td><td></td></tr><tr><td>delete</td><td>goto</td><td>reinterpret_cast</td><td>try</td><td></td></tr></tbody></table><p><code>提示：在给变量或者常量起名称时候，不要用C++得关键字，否则会产生歧义。</code></p><h3 id="1-6-标识符命名规则"><a href="#1-6-标识符命名规则" class="headerlink" title="1.6 标识符命名规则"></a>1.6 标识符命名规则</h3><p><strong>作用</strong>：C++规定给标识符（变量、常量）命名时，有一套自己的规则</p><ul><li>标识符不能是关键字</li><li>标识符只能由字母、数字、下划线组成</li><li>第一个字符必须为字母或下划线</li><li>标识符中字母区分大小写</li></ul><blockquote><p>建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 第一个C++程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++编程环境搭建教程</title>
      <link href="/2023/03/03/c-kai-fa-huan-jing-da-jian/c-kai-fa-huan-jing-da-jian/"/>
      <url>/2023/03/03/c-kai-fa-huan-jing-da-jian/c-kai-fa-huan-jing-da-jian/</url>
      
        <content type="html"><![CDATA[<p>环境搭建步骤：</p><ul><li>下载软件</li><li>安装软件</li><li>运行软件</li></ul><h2 id="1-下载软件"><a href="#1-下载软件" class="headerlink" title="1 下载软件"></a>1 下载软件</h2><p>在百度搜索 visual studio，选择 如下图中的选项</p><p><img src="/2023/03/03/c-kai-fa-huan-jing-da-jian/c-kai-fa-huan-jing-da-jian/1546837497293.png" alt="1546837497293"></p><p>进入Visual Studio 官网后，选择 下载Windows版，并选择Community 2017 社区版本进行下载</p><p><img src="/2023/03/03/c-kai-fa-huan-jing-da-jian/c-kai-fa-huan-jing-da-jian/1546837598475.png" alt="1546837598475"></p><p>保存软件到电脑中</p><p><img src="/2023/03/03/c-kai-fa-huan-jing-da-jian/c-kai-fa-huan-jing-da-jian/1546837638221.png" alt="1546837638221"></p><h2 id="2-安装软件"><a href="#2-安装软件" class="headerlink" title="2 安装软件"></a>2 安装软件</h2><p>双击运行下载的安装文件，弹出安装界面</p><p>选择 <strong>使用C++的桌面开发</strong> 这一选项，如需其他，自行勾选。</p><p>点击安装按钮</p><p><img src="/2023/03/03/c-kai-fa-huan-jing-da-jian/c-kai-fa-huan-jing-da-jian/1546837796703.png" alt="1546837796703"></p><p>开始安装</p><p><img src="/2023/03/03/c-kai-fa-huan-jing-da-jian/c-kai-fa-huan-jing-da-jian/1546837957327.png" alt="1546837957327"></p><p>安装时间会依据网速、电脑设备等因素会不固定，因此可以在此期间刷个微博、抖音啥的。。。</p><p>安装成功后提示重启，点击重启完成剩余配置</p><p><img src="/2023/03/03/c-kai-fa-huan-jing-da-jian/c-kai-fa-huan-jing-da-jian/1546838612922.png" alt="1546838612922"></p><h2 id="3-运行软件"><a href="#3-运行软件" class="headerlink" title="3 运行软件"></a>3 运行软件</h2><p>在开始菜单找到Visual Studio 2017 并且点击运行</p><p><img src="/2023/03/03/c-kai-fa-huan-jing-da-jian/c-kai-fa-huan-jing-da-jian/1546838825077.png" alt="1546838825077"></p><p>弹出初始界面</p><p><img src="/2023/03/03/c-kai-fa-huan-jing-da-jian/c-kai-fa-huan-jing-da-jian/1546838771730.png" alt="1546838771730"></p><p>点击 <strong>创建新项目</strong> 按钮 ，如果出现以下模板选项，证明安装成功，并可以创建C++项目！</p><p><img src="/2023/03/03/c-kai-fa-huan-jing-da-jian/c-kai-fa-huan-jing-da-jian/1546838970191.png" alt="1546838970191"></p><p>至此，C++的开发环境搭建完毕！</p>]]></content>
      
      
      <categories>
          
          <category> C++编程环境搭建教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
